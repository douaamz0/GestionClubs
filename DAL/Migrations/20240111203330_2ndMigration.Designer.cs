// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(MonDbContext))]
    [Migration("20240111203330_2ndMigration")]
    partial class _2ndMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entity.Activite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdClub")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdClub");

                    b.ToTable("Activites");
                });

            modelBuilder.Entity("DAL.Entity.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("DAL.Entity.ListActiviteClub", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdActivite")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdClub", "IdActivite");

                    b.HasIndex("IdActivite");

                    b.ToTable("ListeActiviteClub");
                });

            modelBuilder.Entity("DAL.Entity.ListMembreClub", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdMembre")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("MembreId")
                        .HasColumnType("int");

                    b.HasKey("IdClub", "IdMembre");

                    b.HasIndex("IdMembre");

                    b.HasIndex("MembreId");

                    b.ToTable("ListeMembreClub");
                });

            modelBuilder.Entity("DAL.Entity.Membre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annee")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("Filiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Membres");
                });

            modelBuilder.Entity("DAL.Entity.Activite", b =>
                {
                    b.HasOne("DAL.Entity.Club", "Club")
                        .WithMany("Activites")
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("DAL.Entity.ListActiviteClub", b =>
                {
                    b.HasOne("DAL.Entity.Activite", "Activite")
                        .WithMany()
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entity.Club", "Club")
                        .WithMany()
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activite");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("DAL.Entity.ListMembreClub", b =>
                {
                    b.HasOne("DAL.Entity.Club", "Club")
                        .WithMany()
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entity.Membre", "Membre")
                        .WithMany()
                        .HasForeignKey("IdMembre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entity.Membre", null)
                        .WithMany("Clubs")
                        .HasForeignKey("MembreId");

                    b.Navigation("Club");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("DAL.Entity.Club", b =>
                {
                    b.Navigation("Activites");
                });

            modelBuilder.Entity("DAL.Entity.Membre", b =>
                {
                    b.Navigation("Clubs");
                });
#pragma warning restore 612, 618
        }
    }
}
